// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Wrapper$MyProjectName = require("./Wrapper.bs.js");
var Geography$MyProjectName = require("./Geography.bs.js");
var Geographies$MyProjectName = require("./Geographies.bs.js");
var ComposableMap$MyProjectName = require("./ComposableMap.bs.js");
var ZoomableGroup$MyProjectName = require("./ZoomableGroup.bs.js");

var component = ReasonReact.statelessComponent("App");

var defaultStyle = {
  fill: "#ECEFF1",
  stroke: "#607D8B",
  strokeWidth: 0.75,
  outline: "none"
};

var hoverStyle = {
  fill: "#607D8B",
  stroke: "#607D8B",
  strokeWidth: 0.75,
  outline: "none"
};

var pressedStyle = {
  fill: "#FF5722",
  stroke: "#607D8B",
  strokeWidth: 0.75,
  outline: "none"
};

function make(name, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              return React.createElement("div", undefined, React.createElement("h1", undefined, "Hello " + (name + "!")), ReasonReact.element(/* None */0, /* None */0, Wrapper$MyProjectName.make((function (markers) {
                                    return React.createElement("div", undefined, $$Array.mapi((function (i, marker) {
                                                      return React.createElement("div", {
                                                                  key: String(i)
                                                                }, marker.username);
                                                    }), markers), ReasonReact.element(/* None */0, /* None */0, ComposableMap$MyProjectName.make(980, 551, {
                                                        scale: 205,
                                                        rotation: /* :: */[
                                                          -11,
                                                          /* :: */[
                                                            0,
                                                            /* :: */[
                                                              0,
                                                              /* [] */0
                                                            ]
                                                          ]
                                                        ]
                                                      }, /* array */[ReasonReact.element(/* None */0, /* None */0, ZoomableGroup$MyProjectName.make(/* :: */[
                                                                  0,
                                                                  /* :: */[
                                                                    20,
                                                                    /* [] */0
                                                                  ]
                                                                ], true, /* array */[ReasonReact.element(/* None */0, /* None */0, Geographies$MyProjectName.make("/world-50m.json", /* array */[(function (geographies, projection) {
                                                                                return $$Array.mapi((function (i, geography) {
                                                                                              return ReasonReact.element(/* Some */[String(i)], /* None */0, Geography$MyProjectName.make(geography, projection, {
                                                                                                              default: defaultStyle,
                                                                                                              hover: hoverStyle,
                                                                                                              pressed: pressedStyle
                                                                                                            }, /* array */[]));
                                                                                            }), $$Array.of_list(List.filter((function (geography) {
                                                                                                        return geography.id !== "ATA";
                                                                                                      }))($$Array.to_list(geographies))));
                                                                              })]))]))])));
                                  }), /* array */[])));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.component = component;
exports.defaultStyle = defaultStyle;
exports.hoverStyle = hoverStyle;
exports.pressedStyle = pressedStyle;
exports.make = make;
/* component Not a pure module */
